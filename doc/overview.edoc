%% -*- Doc -*-
%% vim: set syntax=asciidoc:
@author Joseph Wayne Norton <norton@alum.mit.edu>
@copyright 2011-2013 by Joseph Wayne Norton
@title Universal Binary Format and EEP8
@doc
This is UBF-EEP8, a framework for integrating UBF and EEP8.  This
repository depends on the UBF open source repository.

_This repository is experimental in nature and not intended for
production usage._

== Quick Start Recipe

To download, build, and test the ubf_eep8 application in one shot,
please follow this recipe:

------
$ mkdir working-directory-name
$ cd working-directory-name
$ git clone https://github.com/ubf/ubf-eep8.git ubf_eep8
$ cd ubf_eep8
$ make deps clean compile test
------

For an alternative recipe with other "features" albeit more complex,
please read further.

== Documentation

=== Where should I start?

This README is a good first step.

The UBF User\'s Guide is the best next step.  Check out
http://ubf.github.com/ubf/ubf-user-guide.en.html for further
detailed information.

EEP8 samples and eunit tests can be found in the test/eunit directory.

=== What is UBF?

UBF is the "Universal Binary Format", designed and implemented by Joe
Armstrong.  UBF is a language for transporting and describing complex
data structures across a network.  It has three components:

- UBF(a) is a "language neutral" data transport format, roughly
  equivalent to well-formed XML.
- UBF(b) is a programming language for describing types in UBF(a) and
  protocols between clients and servers.  This layer is typically
  called the "protocol contract".  UBF(b) is roughly equivalent to
  Verified XML, XML-schemas, SOAP and WDSL.
- UBF(c) is a meta-level protocol used between a UBF client and a UBF
  server.

See http://ubf.github.com/ubf for further details.

=== What is EEP8?

EEP8 is an extension to the Erlang language for declaring sets of
Erlang terms to form a particular type, effectively forming a specific
subtype of the set of all Erlang terms. Subsequently, these types can
be used to specify types of record fields and argument and return
values of functions.  See http://www.erlang.org/eeps/eep-0008.html for
full details.

=== Tools

For further information and help for related tools, please refer to
the following links:

- Erlang - http://www.erlang.org/
  * *R15B01 or newer, 17.0 has been tested most recently*
- Git - http://git-scm.com/
  * *Git 1.5.4 or newer, Git 1.9.3 has been tested most recently*
- GitHub - https://github.com

== Credits

Many, many thanks to Joe Armstrong, UBF\'s designer and original
implementer.

Thanks to Kostis Sagonas and Tobias Lindahl, EEP8\'s designers and
implementers.

Gemini Mobile Technologies, Inc. has approved the release of this
repository under an MIT license.
@end
